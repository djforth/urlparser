{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["class URLParser {\n  checkSlash(p) {\n    // IE Check as IE does not process pre /\n    let slash_test = p.match('^/');\n\n    return slash_test != null;\n  }\n\n  createParsedURL() {\n    // ['http://www.test.com:3000/mytest/test/123?test=foo&test2=bar#hash1/hash2', 'http', '//', 'www.test.com', '3000', 'mytest/test/123', 'test=foo&test2=bar', 'hash1/hash2']\n    if (this.uri_split) {\n      this.uri_parsed = {\n        fullpath: this.uri_split[0],\n        protocol: this.uri_split[1], // => 'http:'\n        hostname: this.uri_split[3], // => 'example.com'\n        port: this.uri_split[4], // => '3000'\n        pathname: this.uri_split[5], // => 'pathname/test'\n        pathsplit: this.splitPath(this.uri_split[5]), // => '['pathname' 'test']'\n        fullquery: this.uri_split[6], // => '?search=test'\n        query: this.parseQuery(this.uri_split[6]), // {seach:'test'}\n        hash: this.uri_split[7], // => '#hash'\n      };\n\n      return this.uri_parsed;\n    }\n\n    return null;\n  }\n\n  constructor(path) {\n    // Setup\n    this.uri_parsed = {};\n\n    // Gets existing path unless passed to path\n    this.uri = path === undefined ? this.getURL() : path;\n\n    // Parsing\n    this.uri_split = this.parseURL();\n\n    if (this.uri_split) {\n      this.createParsedURL();\n    }\n  }\n\n  getProperty(prop) {\n    let start, end;\n    start = prop.search(/\\[/g);\n    end = prop.search(/\\]/g);\n    return start < end ? prop.slice(start + 1, end) : prop;\n  }\n\n  // <<<<<< Get properties >>>>>>\n  getHostname() {\n    return this.uri_parsed ? this.uri_parsed.hostname : null;\n  }\n\n  getFullPath() {\n    return this.uri_parsed ? this.uri_parsed.fullpath : null;\n  }\n\n  getHash() {\n    return this.uri_parsed ? this.uri_parsed.hash : null;\n  }\n\n  getPathname() {\n    return this.uri_parsed ? this.uri_parsed.pathname : null;\n  }\n\n  getPort() {\n    return this.uri_parsed ? this.uri_parsed.port : null;\n  }\n\n  getProtocol() {\n    return this.uri_parsed ? this.uri_parsed.protocol : null;\n  }\n\n  getQueryString() {\n    return this.uri_parsed ? this.uri_parsed.fullquery : null;\n  }\n\n  getSplitPath() {\n    return this.uri_parsed ? this.uri_parsed.pathsplit : null;\n  }\n\n  getQueryObj() {\n    return this.uri_parsed ? this.uri_parsed.query : null;\n  }\n\n  getURL() {\n    // Gets Current Path\n    let url = decodeURIComponent(window.location.href);\n    return url;\n  }\n\n  parseQuery(queryString) {\n    let qs, queries, params, temp, t, i, l;\n    // Parse query into an object - http://www.joezimjs.com/javascript/3-ways-to-parse-a-query-string-in-a-url/\n    if (queryString) {\n      qs = queryString.replace(/^\\?/, '');\n\n      queries = qs.split('&');\n\n      params = queries.length >= 1 && queries[0] !== '' ? {} : null;\n\n      if (params) {\n        l = queries.length;\n        for (i = 0; i < l; i++) {\n          temp = queries[i].split('=');\n          t = temp[0];\n          params[t] = temp[1];\n        }\n      }\n\n      return params;\n    }\n\n    return null;\n  }\n\n  parseURL() {\n    // Regex taken from is from javascript, the good parts by Douglas Crockford - Best performance (http://jsperf.com/url-parse2)\n    const parse_url = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\n    return this.uri.match(parse_url);\n  }\n\n  splitPath(p) {\n    // Splits path into array\n    let split = p.split('/');\n\n    if (this.checkSlash(p)) {\n      split.shift();\n    }\n    return split;\n  }\n}\n\nexport default URLParser;\n"],"names":["path","this","uri_parsed","uri","getURL","uri_split","parseURL","createParsedURL","p","match","fullpath","protocol","hostname","port","pathname","pathsplit","splitPath","fullquery","query","parseQuery","hash","prop","end","search","slice","start","decodeURIComponent","window","location","href","queryString","queries","params","temp","i","l","replace","split","length","checkSlash","shift","module"],"mappings":"2bA6BE,WAAYA,0GAEVC,KAAKC,cAGLD,KAAKE,SAAM,MAAqBF,KAAKG,SAAWJ,EAGhDC,KAAKI,UAAYJ,KAAKK,WAElBL,KAAKI,WACPJ,KAAKM,+DAvCEC,GAIT,aAFiBA,EAAEC,MAAM,4DAOhBJ,WACPJ,KAAKC,YACHQ,SAAUT,KAAKI,UAAU,GACzBM,SAAUV,KAAKI,UAAU,GACzBO,SAAUX,KAAKI,UAAU,GACzBQ,KAAMZ,KAAKI,UAAU,GACrBS,SAAUb,KAAKI,UAAU,GACzBU,UAAWd,KAAKe,UAAUf,KAAKI,UAAU,IACzCY,UAAWhB,KAAKI,UAAU,GAC1Ba,MAAOjB,KAAKkB,WAAWlB,KAAKI,UAAU,IACtCe,KAAMnB,KAAKI,UAAU,IAGhBJ,KAAKC,YAGP,gDAkBGmB,GACV,MAAWC,EAGX,SAFQD,EAAKE,OAAO,SACpBD,EAAMD,EAAKE,OAAO,QACGF,EAAKG,MAAMC,EAAQ,EAAGH,GAAOD,wCAKlD,YAAYnB,WAAaD,KAAKC,WAAWU,SAAW,2CAIpD,YAAYV,WAAaD,KAAKC,WAAWQ,SAAW,uCAIpD,YAAYR,WAAaD,KAAKC,WAAWkB,KAAO,2CAIhD,YAAYlB,WAAaD,KAAKC,WAAWY,SAAW,uCAIpD,YAAYZ,WAAaD,KAAKC,WAAWW,KAAO,2CAIhD,YAAYX,WAAaD,KAAKC,WAAWS,SAAW,8CAIpD,YAAYT,WAAaD,KAAKC,WAAWe,UAAY,4CAIrD,YAAYf,WAAaD,KAAKC,WAAWa,UAAY,2CAIrD,YAAYb,WAAaD,KAAKC,WAAWgB,MAAQ,sCAMjD,OADUQ,mBAAmBC,OAAOC,SAASC,yCAIpCC,GACT,IAAQC,EAASC,EAAQC,EAASC,EAAGC,EAErC,GAAIL,EAAa,CAOf,GAFAE,EAA2B,IAF3BD,EAFKD,EAAYM,QAAQ,MAAO,IAEnBC,MAAM,MAEFC,QAA8B,OAAP,MAAiB,KAIvD,IADAH,EAAIJ,EAAQO,OACPJ,EAAI,EAAGA,EAAIC,EAAGD,IAGjBF,GAFAC,EAAOF,EAAQG,GAAGG,MAAM,MACf,IACGJ,EAAK,GAIrB,SAGF,+CAOA,YAAY9B,IAAIM,MAFE,qIAKVD,GAER,MAAYA,EAAE6B,MAAM,KAKpB,YAHSE,WAAW/B,IAClB6B,EAAMG,QAEDH,kBAIXI"}